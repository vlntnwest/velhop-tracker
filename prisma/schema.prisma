generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Station {
  stationId Int      @id // GBFS station_id
  name      String
  lat       Float
  lng       Float
  capacity  Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  snapshots    Snapshot[]
  bikeHistoric BikeHistoric[]

  @@index([lat, lng])
}

model Snapshot {
  id                String          @id @default(cuid())
  stationId         Int
  station           Station         @relation(fields: [stationId], references: [stationId], onDelete: Cascade)
  numBikesAvailable Int
  numDocksAvailable Int?
  createdAt         DateTime        @default(now())
  bikeAtStation     BikeAtStation[]
}

model Bike {
  bikeId        String          @id // GBFS bike_id
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  bikeHistoric  BikeHistoric[]
  BikeAtStation BikeAtStation[]
}

model BikeHistoric {
  id        String   @id @default(cuid())
  bikeId    String
  bike      Bike     @relation(fields: [bikeId], references: [bikeId], onDelete: Cascade)
  stationId Int
  station   Station  @relation(fields: [stationId], references: [stationId], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@index([bikeId])
}

model BikeAtStation {
  id         String   @id @default(cuid())
  stationId Int
  snapshotId String
  snapshot   Snapshot @relation(fields: [snapshotId], references: [id], onDelete: Cascade)
  bikeId     String
  bike       Bike     @relation(fields: [bikeId], references: [bikeId], onDelete: Cascade)

  @@unique([snapshotId, bikeId])
  @@index([bikeId])
  @@index([snapshotId])
}
