generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Station {
  stationId     String   @id // GBFS station_id
  name          String
  lat           Float
  lon           Float
  capacity      Int?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  lastApiUpdate Int?

  snapshots    Snapshot[]
  bikeHistoric BikeHistoric[]

  @@index([lat, lon])
}

model Snapshot {
  id                String  @id @default(cuid())
  stationId         String
  station           Station @relation(fields: [stationId], references: [stationId], onDelete: Cascade)
  numBikesAvailable Int
  numDocksAvailable Int?
  apiUpdate     Int?
}

model Bike {
  bikeId       String         @id // GBFS bike_id
  lastSeenAt   Int?
  createdAt    DateTime       @default(now())
  bikeHistoric BikeHistoric[]
}

model BikeHistoric {
  id            String   @id @default(cuid())
  bikeId        String
  bike          Bike     @relation(fields: [bikeId], references: [bikeId], onDelete: Cascade)
  stationId     String
  station       Station  @relation(fields: [stationId], references: [stationId], onDelete: Cascade)
  capturedAt    DateTime @default(now()) // date à laquelle l'API a fourni l'état
  apiUpdate Int?

  @@unique([bikeId, stationId, capturedAt])
  @@index([bikeId])
  @@index([capturedAt])
}
